void dfs(int v, vector<vector<int>> &adj, vector<bool> &visited, stack<int> &s) {
    
    visited[v] = true;
    
    for(int i : adj[v])
        if(!visited[i])
            dfs(i, adj, visited, s);
    
    s.push(v);
}

vector<int> topologicalSort(vector<vector<int>>& adj) {
    
    vector<int> res;
    stack<int> s;
    vector<bool> visited(adj.size(), false);
    
    for(int i = 0; i < adj.size(); i++)
        if(!visited[i])
            dfs(i, adj, visited, s);

    while(!s.empty()) {
        res.push_back(s.top());
        s.pop();
    }
    
    return res;
}
