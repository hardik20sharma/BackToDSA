int longestSubarray(vector<int>& arr, int k) {
    
    int n = arr.size();
    int curr_sum = 0;
    int max_subarr_len = 0;
    
    unordered_map<int, int> prefix_sum; // stores prefix_sum and index
    
    prefix_sum[0] = -1;
    
    for(int i = 0; i < n; i++) {
        
        curr_sum += arr[i];
        
        if(prefix_sum.find(curr_sum - k) != prefix_sum.end())
            max_subarr_len = max(max_subarr_len, i - prefix_sum[curr_sum - k]);    
        
        if(prefix_sum.find(curr_sum) == prefix_sum.end())
            prefix_sum[curr_sum] = i;                
    }

    return max_subarr_len;
}
