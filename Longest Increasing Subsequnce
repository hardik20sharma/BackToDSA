int helper(int a[], int idx, vector<int> &dp) {

    if(idx == 0)
        return 1;

    if(dp[idx] != -1)
        return dp[idx];

    int res = 1;

    for(int i = 0; i < idx; i++)
        if(a[i] < a[idx])
            res = max(res, helper(a, i, dp) + 1);

    return dp[idx] = res;
}

int longestSubsequence(int n, int a[]) {

    vector<int> dp(n+1, -1);

    int res = 1;
    for(int i = 0; i < n; i++)
        res = max(res, helper(a, i, dp));

    return res;
}
