int solve(vector<int>&arr, vector<vector<int>>&dp, int target, int idx){

    if(idx == 0) {
        if(target == 0 && arr[0] == 0)
            return 2;
        if(target == 0 || target == arr[0])
            return 1;
        return 0;
    }

    if(dp[idx][target] != -1)
        return dp[idx][target];

    int include = 0;

    if(arr[idx] <= target)
       include = solve(arr, dp, target - arr[idx], idx - 1);

    int exclude = solve(arr, dp, target, idx - 1);

    return dp[idx][target] = include + exclude;
}

int perfectSum(vector<int>& arr, int target) {
    
    int idx = arr.size();
    
    vector<vector<int>> dp(idx, vector<int>(target + 1, -1));
    
    int ans = solve(arr, dp, target, idx - 1);
    
    return ans;
}
