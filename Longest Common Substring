int solve(string &s1, string &s2, int n, int m, vector<vector<int>> &dp) {

    if(n == 0 || m == 0)
        return 0;

    if (s1[n-1] != s2[m-1])
        return 0;

    if(dp[n][m] != -1)
        return dp[n][m];

    return dp[n][m] = 1 + solve(s1, s2, n-1, m-1, dp);
}

int longestCommonSubstr(string s1, string s2) {
    
    int n = s1.size(), m = s2.size(), res = 0;
    
    vector<vector<int>> dp(n+1, vector<int>(m+1, -1));

    for(int i = 1; i <= n; i++)
        for(int j = 1; j <= m; j++)
            res = max(res, solve(s1, s2, i, j, dp));

    return res;
}
