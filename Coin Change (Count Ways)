int helper(int n, int sum, vector<int> &coins, vector<vector<int>> &dp) {
    
    if(sum == 0)
        return 1;
    
    if(sum < 0 || n < 0)
        return 0;
        
    if(dp[n][sum] != -1)
        return dp[n][sum];
    
    return dp[n][sum] = helper(n, sum-coins[n], coins, dp) + helper(n-1, sum, coins, dp);
}

int count(vector<int>& coins, int sum) {
    
    int n = coins.size();
    vector<vector<int>> dp (n+1, vector<int> (sum+1, -1));
    
    return helper(n-1, sum, coins, dp);
}
