class Solution {

    int solve(int m, int n, string &w1, string &w2, vector<vector<int>> &dp) {
        if(m == 0)
            return n;
        if(n == 0)
            return m;
        
        if(dp[m][n] != -1)
            return dp[m][n];
        
        if(w1[m-1] == w2[n-1])
            return dp[m][n] = solve(m-1, n-1, w1, w2, dp);
        
        return dp[m][n] = 1 + min( { solve(m-1, n-1, w1, w2, dp), solve(m-1, n, w1, w2, dp), solve(m, n-1, w1, w2, dp) } );
    }

public:
    int minDistance(string word1, string word2) {
        int m = word1.size(), n = word2.size();
        vector<vector<int>> dp(m+1, vector<int>(n+1, -1));
        return solve(m, n, word1, word2, dp);
    }
};
