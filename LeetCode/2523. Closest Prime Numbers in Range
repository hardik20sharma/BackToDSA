class Solution {
public:

    vector<int> fibNumbers(int right) {
        
        vector<bool> nos (right + 1, true);
        vector<int> res;

        res.push_back(2);

        for(int i = 2; i <= right; i++) {
            
            if(nos[i] == false)
                continue;
            
            res.push_back(i);

            for(int j = i*2; j <= right; j += i)
                nos[j] = false;
        }

        return res;
    }

    vector<int> closestPrimes(int left, int right) {
        
        vector<int> res = {-1, -1};
        
        vector<int> nos = fibNumbers(right);

        int diff = INT_MAX;

        for(int i = nos.size() - 1; i >= 0; i--)
            if(left <= nos[i-1]) {
                if(diff >= nos[i] - nos[i-1]) {
                    diff = nos[i] - nos[i-1];
                    res = { nos[i-1], nos[i] };
                }
            }
            else
                break;

        return res;
    }
};
