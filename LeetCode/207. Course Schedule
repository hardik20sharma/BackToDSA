class Solution {
public:
    bool canFinish(int n, vector<vector<int>>& prerequisites) {
        
        vector<vector<int>> g(n);
        vector<int> degrees(n);

        for(auto p : prerequisites) {
            g[p[1]].push_back(p[0]);
            degrees[p[0]]++;
        }
        
        queue<int> q;

        for(int i = 0; i < n; i++)
            if(degrees[i] == 0)
                q.push(i);

        while(!q.empty()) {
            
            int curr = q.front();
            q.pop();

            for(int next : g[curr]) {
                degrees[next]--;
                if(degrees[next] == 0)
                    q.push(next);
            }
        }

        for(int i : degrees)
            if(i != 0)
                return false;

        return true;
    }
};
