class Solution {

    int m;
    int n;

    bool isMovePossible(int x, int y) {
        return 0 <= x && x < m && 0 <= y && y < n;
    }

    int area(vector<vector<int>> &grid, int x, int y) {

        if(!isMovePossible(x, y))
            return 0;

        if(grid[x][y] == 0)
            return 0;

        grid[x][y] = 0;

        return 1 + area(grid, x+1, y) + area(grid, x-1, y) + area(grid, x, y+1) + area(grid, x, y-1);
    }

public:
    int maxAreaOfIsland(vector<vector<int>>& grid) {

        m = grid.size();
        n = grid[0].size();

        int res = 0;

        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                if(grid[i][j] == 1)
                    res = max(res, area(grid, i, j));

        return res;
    }
};
