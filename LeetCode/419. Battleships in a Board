class Solution {

    int m;
    int n;
    vector<vector<int>> moves;

    void dfs(vector<vector<char>> &board, int x, int y) {
        
        if(x < 0 || m <= x || y < 0 || n <= y)
            return;

        if(board[x][y] != 'X')
            return;

        board[x][y] = '.';

        for(auto &move : moves) {
            int i = x + move[0], j = y + move[1];
            dfs(board, i, j);
        }
    }

public:
    int countBattleships(vector<vector<char>>& board) {
        
        m = board.size();
        n = board[0].size();
        moves = { {-1, 0}, {1, 0}, {0, 1}, {0, -1} };
        int cnt = 0;

        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                if(board[i][j] == 'X') {
                    cnt++;
                    dfs(board, i, j);
                }

        return cnt;
    }
};
