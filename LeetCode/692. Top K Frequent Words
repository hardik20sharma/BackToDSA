class Solution {

    class cmp {
        public:
            bool operator()(pair<string, int> &p1, pair<string, int> &p2) {
                if(p1.second < p2.second)
                    return true;
                else if(p1.second == p2.second && p1.first > p2.first)
                    return true;
                else
                    return false;
            }
    };

public:
    vector<string> topKFrequent(vector<string> &words, int k) {
        
        unordered_map<string, int> mp;

        for(string word : words)
            mp[word]++;

        priority_queue<pair<string, int>, vector<pair<string, int>>, cmp> pq;

        for(auto i : mp)
            pq.push( {i.first, i.second} );

        
        vector<string> res;

        while(k--) {
            res.push_back(pq.top().first);
            pq.pop();
        }

        return res;
    }
};
