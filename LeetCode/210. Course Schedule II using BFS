class Solution {
public:

    vector<int> findOrder(int n, vector<vector<int>>& prerequisites) {
        
        vector<vector<int>> graph (n);

        for(auto i : prerequisites)
            graph[i[1]].push_back(i[0]);

        vector<int> indegree(n, 0);
        vector<int> res;

        for(int i = 0; i < n; i++)
            for(int nxt : graph[i])
                indegree[nxt]++;

        queue<int> q;
        for(int i = 0; i < n; i++)
            if(indegree[i] == 0)
                q.push(i);

        while(!q.empty()) {
            
            int curr = q.front();
            q.pop();

            res.push_back(curr);

            for(int nxt : graph[curr]) {
                indegree[nxt]--;
                if(indegree[nxt] == 0)
                    q.push(nxt);
            }
        }

        if(res.size() != n)
            return {};

        return res;
    }
};
