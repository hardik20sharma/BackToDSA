class Solution {

    int numSubarrayProductLessThanKBruteForce(vector<int>& nums, int k) {
        
        int n = nums.size(), res = 0;

        for(int i = 0; i < n; i++) {

            long long int product = 1;

            for(int j = i; j < n; j++) {

                product *= nums[j];

                if(product < k)
                    res++;
                else
                    break;
            }
        }

        return res;
    }

public:

    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        
        int n = nums.size(), res = 0;
        int left = 0, right = 0;
        long long int product = 1;

        while(right < n) {
            
            product *= nums[right];
            right++;
            
            while(left < right && product >= k) {
                product /= nums[left];
                left++;
            }
            
            res += (right - left);
        }

        return res;
    }
};
