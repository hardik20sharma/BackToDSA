// value - freq, first idx, last idx
class Solution {
public:
    int findShortestSubArray(vector<int>& nums) {
        
        unordered_map<int, vector<int>> mp;
        
        for(int i = 0; i < nums.size(); i++) {
            if(mp.find(nums[i]) != mp.end()) {
                mp[nums[i]][0]++;
                mp[nums[i]][2] = i;
            }
            else {
                mp[nums[i]] = {1, i, i};
            }
        }

        int res = -1, maxfreq = 0;
        for(auto i : mp) {
            if(maxfreq < i.second[0]) {
                maxfreq = i.second[0];
                res = i.second[2] - i.second[1] + 1;
            }
            else if(maxfreq == i.second[0]) {
                res = min(res, i.second[2] - i.second[1] + 1);
            }
        }

        return res;
    }
};
