class Solution {
public:
    int findSubstringInWraproundString(string s) {

        vector<int> dp(26, 0);
        int currLen = 0;

        for (int i = 0; i < s.size(); ++i) {
            if (i > 0 && (s[i] - s[i - 1] == 1 || (s[i - 1] == 'z' && s[i] == 'a')))
                currLen++;
            else
                currLen = 1;

            int idx = s[i] - 'a';
            dp[idx] = max(dp[idx], currLen);
        }

        return accumulate(dp.begin(), dp.end(), 0);
    }
};
