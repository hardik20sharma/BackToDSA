class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        
        int m = matrix.size(), n = matrix[0].size();
        int top = 0, bottom = m-1;
        int left = 0, right = n-1;

        int i = 0, j = 0;
        vector<int> res;

        while(left <= right && top <= bottom) {

            for (int j = left; j <= right; j++)
                res.push_back(matrix[top][j]);
            top++;

            for (int i = top; i <= bottom; i++) 
                res.push_back(matrix[i][right]);
            right--;

            if (top <= bottom) {
                for (int j = right; left <= j; j--) 
                    res.push_back(matrix[bottom][j]);
                bottom--;
            }

            if (left <= right) {
                for (int i = bottom; top <= i; i--)
                    res.push_back(matrix[i][left]);
                left++;
            }
        }

        return res;
    }
};
