/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:

    void solve(TreeNode *root, int sum, vector<vector<int>> &res, vector<int> &vec) {
        
        if(root == NULL)
            return;
        
        vec.push_back(root->val);
        sum -= root->val;

        if(sum == 0 && root->left == NULL && root->right == NULL)
            res.push_back(vec);

        solve(root->left, sum, res, vec);
        solve(root->right, sum, res, vec);

        vec.pop_back();
    }

    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vector<int>> res;
        vector<int> vec;

        solve(root, sum, res, vec);

        return res;
    }
};
