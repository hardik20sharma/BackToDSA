/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    int height(TreeNode *root) {
        if(root == NULL)
            return 0;
        return 1 + max(height(root->left), height(root->right));
    }

    void helper(vector<int> &res, TreeNode *root, int height) {
        
        if(root == NULL)
            return;
        
        if(res[height] == -1000)
            res[height] = root->val;

        helper(res, root->right, height + 1);
        helper(res, root->left, height + 1);
    }

    vector<int> rightSideView(TreeNode* root) {

        int n = height(root);
        vector<int> res(n, -1000);

        helper(res, root, 0);

        return res;
    }
};
