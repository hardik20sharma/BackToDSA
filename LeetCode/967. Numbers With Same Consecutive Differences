class Solution {

private:

    void dfs(int n, int num, int &k, vector<int>& res) {
        
        if (n == 0) {
            res.push_back(num);
            return;
        }
        
        int tailDigit = num % 10;
        
        if(tailDigit + k <= 9)
            dfs(n-1, num * 10 + tailDigit + k, k, res);
        
        if(k != 0 && 0 <= tailDigit - k)
            dfs(n-1, num * 10 + tailDigit - k, k, res);
    }

public:

    vector<int> numsSameConsecDiff(int n, int k) {

        vector<int> res;

        for (int num = 1; num <= 9; num++)
            dfs(n - 1, num, k, res);

        return res;
    }
};
