class Solution {
public:

    int sol(vector<int> &nums, vector<vector<int>> &dp, bool rightTaken, int n) {
        
        if(n == 0)
            return 0;

        if(dp[n][rightTaken] != -1)
            return dp[n][rightTaken];
        
        if(rightTaken)
            return dp[n][rightTaken] = sol(nums, dp, false, n-1);
        
        return dp[n][rightTaken] = max(sol(nums, dp, false, n-1), nums[n] + sol(nums, dp, true, n-1));
    }

    int rob(vector<int>& nums) {
        
        int n = nums.size();
        vector<vector<int>> dp(n+1, vector<int>(2, -1));

        if(n == 1)
            return nums[0];

        if(n == 2)
            return max(nums[0], nums[1]);
        
        return sol(nums, dp, false, n-1);
    }
};
