class Solution {
public:
    int longestPalindrome(vector<string>& words) {
        
        unordered_map<string, int> mp;

        for(auto word : words)
            mp[word]++;
        
        int count = 0, alreadyPalindrome = 0;

        for (auto& [word, freq] : mp) {
            
            string s = word;
            reverse(s.begin(), s.end());
            
            if (word == s) {

                count += (freq / 2) * 4;
                if (freq % 2 == 1)
                    alreadyPalindrome = 1;

            } else if (word < s && mp.count(s)) {
                count += min(freq, mp[s]) * 4;
            }
        }

        return count + alreadyPalindrome * 2;
    }
};
